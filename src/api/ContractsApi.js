/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BadRequest', 'model/ErrorLimited', 'model/Forbidden', 'model/GatewayTimeout', 'model/GetCharactersCharacterIdContracts200Ok', 'model/GetCharactersCharacterIdContractsContractIdBids200Ok', 'model/GetCharactersCharacterIdContractsContractIdBidsNotFound', 'model/GetCharactersCharacterIdContractsContractIdItems200Ok', 'model/GetCharactersCharacterIdContractsContractIdItemsNotFound', 'model/GetContractsPublicBidsContractId200Ok', 'model/GetContractsPublicBidsContractIdForbidden', 'model/GetContractsPublicBidsContractIdNotFound', 'model/GetContractsPublicItemsContractId200Ok', 'model/GetContractsPublicItemsContractIdForbidden', 'model/GetContractsPublicItemsContractIdNotFound', 'model/GetContractsPublicRegionId200Ok', 'model/GetContractsPublicRegionIdNotFound', 'model/GetCorporationsCorporationIdContracts200Ok', 'model/GetCorporationsCorporationIdContractsContractIdBids200Ok', 'model/GetCorporationsCorporationIdContractsContractIdBidsNotFound', 'model/GetCorporationsCorporationIdContractsContractIdItems200Ok', 'model/GetCorporationsCorporationIdContractsContractIdItemsError520', 'model/GetCorporationsCorporationIdContractsContractIdItemsNotFound', 'model/InternalServerError', 'model/ServiceUnavailable', 'model/Unauthorized'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/BadRequest'), require('../model/ErrorLimited'), require('../model/Forbidden'), require('../model/GatewayTimeout'), require('../model/GetCharactersCharacterIdContracts200Ok'), require('../model/GetCharactersCharacterIdContractsContractIdBids200Ok'), require('../model/GetCharactersCharacterIdContractsContractIdBidsNotFound'), require('../model/GetCharactersCharacterIdContractsContractIdItems200Ok'), require('../model/GetCharactersCharacterIdContractsContractIdItemsNotFound'), require('../model/GetContractsPublicBidsContractId200Ok'), require('../model/GetContractsPublicBidsContractIdForbidden'), require('../model/GetContractsPublicBidsContractIdNotFound'), require('../model/GetContractsPublicItemsContractId200Ok'), require('../model/GetContractsPublicItemsContractIdForbidden'), require('../model/GetContractsPublicItemsContractIdNotFound'), require('../model/GetContractsPublicRegionId200Ok'), require('../model/GetContractsPublicRegionIdNotFound'), require('../model/GetCorporationsCorporationIdContracts200Ok'), require('../model/GetCorporationsCorporationIdContractsContractIdBids200Ok'), require('../model/GetCorporationsCorporationIdContractsContractIdBidsNotFound'), require('../model/GetCorporationsCorporationIdContractsContractIdItems200Ok'), require('../model/GetCorporationsCorporationIdContractsContractIdItemsError520'), require('../model/GetCorporationsCorporationIdContractsContractIdItemsNotFound'), require('../model/InternalServerError'), require('../model/ServiceUnavailable'), require('../model/Unauthorized'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.ContractsApi = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.BadRequest, root.EveSwaggerInterface.ErrorLimited, root.EveSwaggerInterface.Forbidden, root.EveSwaggerInterface.GatewayTimeout, root.EveSwaggerInterface.GetCharactersCharacterIdContracts200Ok, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdBids200Ok, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdBidsNotFound, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdItems200Ok, root.EveSwaggerInterface.GetCharactersCharacterIdContractsContractIdItemsNotFound, root.EveSwaggerInterface.GetContractsPublicBidsContractId200Ok, root.EveSwaggerInterface.GetContractsPublicBidsContractIdForbidden, root.EveSwaggerInterface.GetContractsPublicBidsContractIdNotFound, root.EveSwaggerInterface.GetContractsPublicItemsContractId200Ok, root.EveSwaggerInterface.GetContractsPublicItemsContractIdForbidden, root.EveSwaggerInterface.GetContractsPublicItemsContractIdNotFound, root.EveSwaggerInterface.GetContractsPublicRegionId200Ok, root.EveSwaggerInterface.GetContractsPublicRegionIdNotFound, root.EveSwaggerInterface.GetCorporationsCorporationIdContracts200Ok, root.EveSwaggerInterface.GetCorporationsCorporationIdContractsContractIdBids200Ok, root.EveSwaggerInterface.GetCorporationsCorporationIdContractsContractIdBidsNotFound, root.EveSwaggerInterface.GetCorporationsCorporationIdContractsContractIdItems200Ok, root.EveSwaggerInterface.GetCorporationsCorporationIdContractsContractIdItemsError520, root.EveSwaggerInterface.GetCorporationsCorporationIdContractsContractIdItemsNotFound, root.EveSwaggerInterface.InternalServerError, root.EveSwaggerInterface.ServiceUnavailable, root.EveSwaggerInterface.Unauthorized);
  }
}(this, function(ApiClient, BadRequest, ErrorLimited, Forbidden, GatewayTimeout, GetCharactersCharacterIdContracts200Ok, GetCharactersCharacterIdContractsContractIdBids200Ok, GetCharactersCharacterIdContractsContractIdBidsNotFound, GetCharactersCharacterIdContractsContractIdItems200Ok, GetCharactersCharacterIdContractsContractIdItemsNotFound, GetContractsPublicBidsContractId200Ok, GetContractsPublicBidsContractIdForbidden, GetContractsPublicBidsContractIdNotFound, GetContractsPublicItemsContractId200Ok, GetContractsPublicItemsContractIdForbidden, GetContractsPublicItemsContractIdNotFound, GetContractsPublicRegionId200Ok, GetContractsPublicRegionIdNotFound, GetCorporationsCorporationIdContracts200Ok, GetCorporationsCorporationIdContractsContractIdBids200Ok, GetCorporationsCorporationIdContractsContractIdBidsNotFound, GetCorporationsCorporationIdContractsContractIdItems200Ok, GetCorporationsCorporationIdContractsContractIdItemsError520, GetCorporationsCorporationIdContractsContractIdItemsNotFound, InternalServerError, ServiceUnavailable, Unauthorized) {
  'use strict';

  /**
   * Contracts service.
   * @module api/ContractsApi
   * @version 1.3.8
   */

  /**
   * Constructs a new ContractsApi. 
   * @alias module:api/ContractsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getCharactersCharacterIdContracts operation.
     * @callback module:api/ContractsApi~getCharactersCharacterIdContractsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdContracts200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contracts
     * Returns contracts available to a character, only if the character is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".  --- Alternate route: `/dev/characters/{character_id}/contracts/`  Alternate route: `/legacy/characters/{character_id}/contracts/`  Alternate route: `/v1/characters/{character_id}/contracts/`  --- This route is cached for up to 300 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/ContractsApi~getCharactersCharacterIdContractsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdContracts200Ok>}
     */
    this.getCharactersCharacterIdContracts = function(characterId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdContracts");
      }


      var pathParams = {
        'character_id': characterId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdContracts200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/contracts/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdContractsContractIdBids operation.
     * @callback module:api/ContractsApi~getCharactersCharacterIdContractsContractIdBidsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdContractsContractIdBids200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contract bids
     * Lists bids on a particular auction contract  --- Alternate route: `/dev/characters/{character_id}/contracts/{contract_id}/bids/`  Alternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/bids/`  Alternate route: `/v1/characters/{character_id}/contracts/{contract_id}/bids/`  --- This route is cached for up to 300 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Number} contractId ID of a contract
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/ContractsApi~getCharactersCharacterIdContractsContractIdBidsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdContractsContractIdBids200Ok>}
     */
    this.getCharactersCharacterIdContractsContractIdBids = function(characterId, contractId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdContractsContractIdBids");
      }

      // verify the required parameter 'contractId' is set
      if (contractId === undefined || contractId === null) {
        throw new Error("Missing the required parameter 'contractId' when calling getCharactersCharacterIdContractsContractIdBids");
      }


      var pathParams = {
        'character_id': characterId,
        'contract_id': contractId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdContractsContractIdBids200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/contracts/{contract_id}/bids/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCharactersCharacterIdContractsContractIdItems operation.
     * @callback module:api/ContractsApi~getCharactersCharacterIdContractsContractIdItemsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCharactersCharacterIdContractsContractIdItems200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contract items
     * Lists items of a particular contract  --- Alternate route: `/dev/characters/{character_id}/contracts/{contract_id}/items/`  Alternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/items/`  Alternate route: `/v1/characters/{character_id}/contracts/{contract_id}/items/`  --- This route is cached for up to 3600 seconds
     * @param {Number} characterId An EVE character ID
     * @param {Number} contractId ID of a contract
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/ContractsApi~getCharactersCharacterIdContractsContractIdItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCharactersCharacterIdContractsContractIdItems200Ok>}
     */
    this.getCharactersCharacterIdContractsContractIdItems = function(characterId, contractId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'characterId' is set
      if (characterId === undefined || characterId === null) {
        throw new Error("Missing the required parameter 'characterId' when calling getCharactersCharacterIdContractsContractIdItems");
      }

      // verify the required parameter 'contractId' is set
      if (contractId === undefined || contractId === null) {
        throw new Error("Missing the required parameter 'contractId' when calling getCharactersCharacterIdContractsContractIdItems");
      }


      var pathParams = {
        'character_id': characterId,
        'contract_id': contractId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCharactersCharacterIdContractsContractIdItems200Ok];

      return this.apiClient.callApi(
        '/characters/{character_id}/contracts/{contract_id}/items/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getContractsPublicBidsContractId operation.
     * @callback module:api/ContractsApi~getContractsPublicBidsContractIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetContractsPublicBidsContractId200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get public contract bids
     * Lists bids on a public auction contract  --- Alternate route: `/dev/contracts/public/bids/{contract_id}/`  Alternate route: `/legacy/contracts/public/bids/{contract_id}/`  Alternate route: `/v1/contracts/public/bids/{contract_id}/`  --- This route is cached for up to 300 seconds
     * @param {Number} contractId ID of a contract
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {module:api/ContractsApi~getContractsPublicBidsContractIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetContractsPublicBidsContractId200Ok>}
     */
    this.getContractsPublicBidsContractId = function(contractId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'contractId' is set
      if (contractId === undefined || contractId === null) {
        throw new Error("Missing the required parameter 'contractId' when calling getContractsPublicBidsContractId");
      }


      var pathParams = {
        'contract_id': contractId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetContractsPublicBidsContractId200Ok];

      return this.apiClient.callApi(
        '/contracts/public/bids/{contract_id}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getContractsPublicItemsContractId operation.
     * @callback module:api/ContractsApi~getContractsPublicItemsContractIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetContractsPublicItemsContractId200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get public contract items
     * Lists items of a public contract  --- Alternate route: `/dev/contracts/public/items/{contract_id}/`  Alternate route: `/legacy/contracts/public/items/{contract_id}/`  Alternate route: `/v1/contracts/public/items/{contract_id}/`  --- This route is cached for up to 3600 seconds
     * @param {Number} contractId ID of a contract
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {module:api/ContractsApi~getContractsPublicItemsContractIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetContractsPublicItemsContractId200Ok>}
     */
    this.getContractsPublicItemsContractId = function(contractId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'contractId' is set
      if (contractId === undefined || contractId === null) {
        throw new Error("Missing the required parameter 'contractId' when calling getContractsPublicItemsContractId");
      }


      var pathParams = {
        'contract_id': contractId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetContractsPublicItemsContractId200Ok];

      return this.apiClient.callApi(
        '/contracts/public/items/{contract_id}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getContractsPublicRegionId operation.
     * @callback module:api/ContractsApi~getContractsPublicRegionIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetContractsPublicRegionId200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get public contracts
     * Returns a paginated list of all public contracts in the given region  --- Alternate route: `/dev/contracts/public/{region_id}/`  Alternate route: `/legacy/contracts/public/{region_id}/`  Alternate route: `/v1/contracts/public/{region_id}/`  --- This route is cached for up to 1800 seconds
     * @param {Number} regionId An EVE region id
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {module:api/ContractsApi~getContractsPublicRegionIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetContractsPublicRegionId200Ok>}
     */
    this.getContractsPublicRegionId = function(regionId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'regionId' is set
      if (regionId === undefined || regionId === null) {
        throw new Error("Missing the required parameter 'regionId' when calling getContractsPublicRegionId");
      }


      var pathParams = {
        'region_id': regionId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetContractsPublicRegionId200Ok];

      return this.apiClient.callApi(
        '/contracts/public/{region_id}/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationsCorporationIdContracts operation.
     * @callback module:api/ContractsApi~getCorporationsCorporationIdContractsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationsCorporationIdContracts200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get corporation contracts
     * Returns contracts available to a corporation, only if the corporation is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is \"in_progress\".  --- Alternate route: `/dev/corporations/{corporation_id}/contracts/`  Alternate route: `/legacy/corporations/{corporation_id}/contracts/`  Alternate route: `/v1/corporations/{corporation_id}/contracts/`  --- This route is cached for up to 300 seconds
     * @param {Number} corporationId An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/ContractsApi~getCorporationsCorporationIdContractsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationsCorporationIdContracts200Ok>}
     */
    this.getCorporationsCorporationIdContracts = function(corporationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationsCorporationIdContracts");
      }


      var pathParams = {
        'corporation_id': corporationId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCorporationsCorporationIdContracts200Ok];

      return this.apiClient.callApi(
        '/corporations/{corporation_id}/contracts/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationsCorporationIdContractsContractIdBids operation.
     * @callback module:api/ContractsApi~getCorporationsCorporationIdContractsContractIdBidsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationsCorporationIdContractsContractIdBids200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get corporation contract bids
     * Lists bids on a particular auction contract  --- Alternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/bids/`  Alternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/bids/`  Alternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/bids/`  --- This route is cached for up to 3600 seconds
     * @param {Number} contractId ID of a contract
     * @param {Number} corporationId An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {Number} opts.page Which page of results to return (default to 1)
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/ContractsApi~getCorporationsCorporationIdContractsContractIdBidsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationsCorporationIdContractsContractIdBids200Ok>}
     */
    this.getCorporationsCorporationIdContractsContractIdBids = function(contractId, corporationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'contractId' is set
      if (contractId === undefined || contractId === null) {
        throw new Error("Missing the required parameter 'contractId' when calling getCorporationsCorporationIdContractsContractIdBids");
      }

      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationsCorporationIdContractsContractIdBids");
      }


      var pathParams = {
        'contract_id': contractId,
        'corporation_id': corporationId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'page': opts['page'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCorporationsCorporationIdContractsContractIdBids200Ok];

      return this.apiClient.callApi(
        '/corporations/{corporation_id}/contracts/{contract_id}/bids/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getCorporationsCorporationIdContractsContractIdItems operation.
     * @callback module:api/ContractsApi~getCorporationsCorporationIdContractsContractIdItemsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetCorporationsCorporationIdContractsContractIdItems200Ok>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get corporation contract items
     * Lists items of a particular contract  --- Alternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/items/`  Alternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/items/`  Alternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/items/`  --- This route is cached for up to 3600 seconds
     * @param {Number} contractId ID of a contract
     * @param {Number} corporationId An EVE corporation ID
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.datasource The server name you would like data from (default to tranquility)
     * @param {String} opts.ifNoneMatch ETag from a previous request. A 304 will be returned if this matches the current ETag
     * @param {String} opts.token Access token to use if unable to set a header
     * @param {module:api/ContractsApi~getCorporationsCorporationIdContractsContractIdItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetCorporationsCorporationIdContractsContractIdItems200Ok>}
     */
    this.getCorporationsCorporationIdContractsContractIdItems = function(contractId, corporationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'contractId' is set
      if (contractId === undefined || contractId === null) {
        throw new Error("Missing the required parameter 'contractId' when calling getCorporationsCorporationIdContractsContractIdItems");
      }

      // verify the required parameter 'corporationId' is set
      if (corporationId === undefined || corporationId === null) {
        throw new Error("Missing the required parameter 'corporationId' when calling getCorporationsCorporationIdContractsContractIdItems");
      }


      var pathParams = {
        'contract_id': contractId,
        'corporation_id': corporationId
      };
      var queryParams = {
        'datasource': opts['datasource'],
        'token': opts['token'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'If-None-Match': opts['ifNoneMatch']
      };
      var formParams = {
      };

      var authNames = ['evesso'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [GetCorporationsCorporationIdContractsContractIdItems200Ok];

      return this.apiClient.callApi(
        '/corporations/{corporation_id}/contracts/{contract_id}/items/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
