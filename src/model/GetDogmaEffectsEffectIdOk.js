/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetDogmaEffectsEffectIdModifier'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GetDogmaEffectsEffectIdModifier'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.GetDogmaEffectsEffectIdOk = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetDogmaEffectsEffectIdModifier);
  }
}(this, function(ApiClient, GetDogmaEffectsEffectIdModifier) {
  'use strict';

  /**
   * The GetDogmaEffectsEffectIdOk model module.
   * @module model/GetDogmaEffectsEffectIdOk
   * @version 1.3.8
   */

  /**
   * Constructs a new <code>GetDogmaEffectsEffectIdOk</code>.
   * 200 ok object
   * @alias module:model/GetDogmaEffectsEffectIdOk
   * @class
   * @param effectId {Number} effect_id integer
   */
  var exports = function(effectId) {
    this.effectId = effectId;
  };

  /**
   * Constructs a <code>GetDogmaEffectsEffectIdOk</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetDogmaEffectsEffectIdOk} obj Optional instance to populate.
   * @return {module:model/GetDogmaEffectsEffectIdOk} The populated <code>GetDogmaEffectsEffectIdOk</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('disallow_auto_repeat'))
        obj.disallowAutoRepeat = ApiClient.convertToType(data['disallow_auto_repeat'], 'Boolean');
      if (data.hasOwnProperty('discharge_attribute_id'))
        obj.dischargeAttributeId = ApiClient.convertToType(data['discharge_attribute_id'], 'Number');
      if (data.hasOwnProperty('display_name'))
        obj.displayName = ApiClient.convertToType(data['display_name'], 'String');
      if (data.hasOwnProperty('duration_attribute_id'))
        obj.durationAttributeId = ApiClient.convertToType(data['duration_attribute_id'], 'Number');
      if (data.hasOwnProperty('effect_category'))
        obj.effectCategory = ApiClient.convertToType(data['effect_category'], 'Number');
      if (data.hasOwnProperty('effect_id'))
        obj.effectId = ApiClient.convertToType(data['effect_id'], 'Number');
      if (data.hasOwnProperty('electronic_chance'))
        obj.electronicChance = ApiClient.convertToType(data['electronic_chance'], 'Boolean');
      if (data.hasOwnProperty('falloff_attribute_id'))
        obj.falloffAttributeId = ApiClient.convertToType(data['falloff_attribute_id'], 'Number');
      if (data.hasOwnProperty('icon_id'))
        obj.iconId = ApiClient.convertToType(data['icon_id'], 'Number');
      if (data.hasOwnProperty('is_assistance'))
        obj.isAssistance = ApiClient.convertToType(data['is_assistance'], 'Boolean');
      if (data.hasOwnProperty('is_offensive'))
        obj.isOffensive = ApiClient.convertToType(data['is_offensive'], 'Boolean');
      if (data.hasOwnProperty('is_warp_safe'))
        obj.isWarpSafe = ApiClient.convertToType(data['is_warp_safe'], 'Boolean');
      if (data.hasOwnProperty('modifiers'))
        obj.modifiers = ApiClient.convertToType(data['modifiers'], [GetDogmaEffectsEffectIdModifier]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('post_expression'))
        obj.postExpression = ApiClient.convertToType(data['post_expression'], 'Number');
      if (data.hasOwnProperty('pre_expression'))
        obj.preExpression = ApiClient.convertToType(data['pre_expression'], 'Number');
      if (data.hasOwnProperty('published'))
        obj.published = ApiClient.convertToType(data['published'], 'Boolean');
      if (data.hasOwnProperty('range_attribute_id'))
        obj.rangeAttributeId = ApiClient.convertToType(data['range_attribute_id'], 'Number');
      if (data.hasOwnProperty('range_chance'))
        obj.rangeChance = ApiClient.convertToType(data['range_chance'], 'Boolean');
      if (data.hasOwnProperty('tracking_speed_attribute_id'))
        obj.trackingSpeedAttributeId = ApiClient.convertToType(data['tracking_speed_attribute_id'], 'Number');
    }
    return obj;
  }

  /**
   * description string
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * disallow_auto_repeat boolean
   * @member {Boolean} disallowAutoRepeat
   */
  exports.prototype.disallowAutoRepeat = undefined;

  /**
   * discharge_attribute_id integer
   * @member {Number} dischargeAttributeId
   */
  exports.prototype.dischargeAttributeId = undefined;

  /**
   * display_name string
   * @member {String} displayName
   */
  exports.prototype.displayName = undefined;

  /**
   * duration_attribute_id integer
   * @member {Number} durationAttributeId
   */
  exports.prototype.durationAttributeId = undefined;

  /**
   * effect_category integer
   * @member {Number} effectCategory
   */
  exports.prototype.effectCategory = undefined;

  /**
   * effect_id integer
   * @member {Number} effectId
   */
  exports.prototype.effectId = undefined;

  /**
   * electronic_chance boolean
   * @member {Boolean} electronicChance
   */
  exports.prototype.electronicChance = undefined;

  /**
   * falloff_attribute_id integer
   * @member {Number} falloffAttributeId
   */
  exports.prototype.falloffAttributeId = undefined;

  /**
   * icon_id integer
   * @member {Number} iconId
   */
  exports.prototype.iconId = undefined;

  /**
   * is_assistance boolean
   * @member {Boolean} isAssistance
   */
  exports.prototype.isAssistance = undefined;

  /**
   * is_offensive boolean
   * @member {Boolean} isOffensive
   */
  exports.prototype.isOffensive = undefined;

  /**
   * is_warp_safe boolean
   * @member {Boolean} isWarpSafe
   */
  exports.prototype.isWarpSafe = undefined;

  /**
   * modifiers array
   * @member {Array.<module:model/GetDogmaEffectsEffectIdModifier>} modifiers
   */
  exports.prototype.modifiers = undefined;

  /**
   * name string
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * post_expression integer
   * @member {Number} postExpression
   */
  exports.prototype.postExpression = undefined;

  /**
   * pre_expression integer
   * @member {Number} preExpression
   */
  exports.prototype.preExpression = undefined;

  /**
   * published boolean
   * @member {Boolean} published
   */
  exports.prototype.published = undefined;

  /**
   * range_attribute_id integer
   * @member {Number} rangeAttributeId
   */
  exports.prototype.rangeAttributeId = undefined;

  /**
   * range_chance boolean
   * @member {Boolean} rangeChance
   */
  exports.prototype.rangeChance = undefined;

  /**
   * tracking_speed_attribute_id integer
   * @member {Number} trackingSpeedAttributeId
   */
  exports.prototype.trackingSpeedAttributeId = undefined;

  return exports;

}));
