/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GetCharactersCharacterIdBookmarksCoordinates', 'model/GetCharactersCharacterIdBookmarksItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GetCharactersCharacterIdBookmarksCoordinates'), require('./GetCharactersCharacterIdBookmarksItem'));
  } else {
    // Browser globals (root is window)
    if (!root.EveSwaggerInterface) {
      root.EveSwaggerInterface = {};
    }
    root.EveSwaggerInterface.GetCharactersCharacterIdBookmarks200Ok = factory(root.EveSwaggerInterface.ApiClient, root.EveSwaggerInterface.GetCharactersCharacterIdBookmarksCoordinates, root.EveSwaggerInterface.GetCharactersCharacterIdBookmarksItem);
  }
}(this, function(ApiClient, GetCharactersCharacterIdBookmarksCoordinates, GetCharactersCharacterIdBookmarksItem) {
  'use strict';

  /**
   * The GetCharactersCharacterIdBookmarks200Ok model module.
   * @module model/GetCharactersCharacterIdBookmarks200Ok
   * @version 1.3.8
   */

  /**
   * Constructs a new <code>GetCharactersCharacterIdBookmarks200Ok</code>.
   * 200 ok object
   * @alias module:model/GetCharactersCharacterIdBookmarks200Ok
   * @class
   * @param bookmarkId {Number} bookmark_id integer
   * @param created {Date} created string
   * @param creatorId {Number} creator_id integer
   * @param label {String} label string
   * @param locationId {Number} location_id integer
   * @param notes {String} notes string
   */
  var exports = function(bookmarkId, created, creatorId, label, locationId, notes) {
    this.bookmarkId = bookmarkId;
    this.created = created;
    this.creatorId = creatorId;
    this.label = label;
    this.locationId = locationId;
    this.notes = notes;
  };

  /**
   * Constructs a <code>GetCharactersCharacterIdBookmarks200Ok</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetCharactersCharacterIdBookmarks200Ok} obj Optional instance to populate.
   * @return {module:model/GetCharactersCharacterIdBookmarks200Ok} The populated <code>GetCharactersCharacterIdBookmarks200Ok</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('bookmark_id'))
        obj.bookmarkId = ApiClient.convertToType(data['bookmark_id'], 'Number');
      if (data.hasOwnProperty('coordinates'))
        obj.coordinates = GetCharactersCharacterIdBookmarksCoordinates.constructFromObject(data['coordinates']);
      if (data.hasOwnProperty('created'))
        obj.created = ApiClient.convertToType(data['created'], 'Date');
      if (data.hasOwnProperty('creator_id'))
        obj.creatorId = ApiClient.convertToType(data['creator_id'], 'Number');
      if (data.hasOwnProperty('folder_id'))
        obj.folderId = ApiClient.convertToType(data['folder_id'], 'Number');
      if (data.hasOwnProperty('item'))
        obj.item = GetCharactersCharacterIdBookmarksItem.constructFromObject(data['item']);
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('location_id'))
        obj.locationId = ApiClient.convertToType(data['location_id'], 'Number');
      if (data.hasOwnProperty('notes'))
        obj.notes = ApiClient.convertToType(data['notes'], 'String');
    }
    return obj;
  }

  /**
   * bookmark_id integer
   * @member {Number} bookmarkId
   */
  exports.prototype.bookmarkId = undefined;

  /**
   * @member {module:model/GetCharactersCharacterIdBookmarksCoordinates} coordinates
   */
  exports.prototype.coordinates = undefined;

  /**
   * created string
   * @member {Date} created
   */
  exports.prototype.created = undefined;

  /**
   * creator_id integer
   * @member {Number} creatorId
   */
  exports.prototype.creatorId = undefined;

  /**
   * folder_id integer
   * @member {Number} folderId
   */
  exports.prototype.folderId = undefined;

  /**
   * @member {module:model/GetCharactersCharacterIdBookmarksItem} item
   */
  exports.prototype.item = undefined;

  /**
   * label string
   * @member {String} label
   */
  exports.prototype.label = undefined;

  /**
   * location_id integer
   * @member {Number} locationId
   */
  exports.prototype.locationId = undefined;

  /**
   * notes string
   * @member {String} notes
   */
  exports.prototype.notes = undefined;

  return exports;

}));
