/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdOk', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCharactersCharacterIdOk();
      });

      it('should create an instance of GetCharactersCharacterIdOk', function() {
        // TODO: update the code to test GetCharactersCharacterIdOk
        expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdOk);
      });

      it('should have the property allianceId (base name: "alliance_id")', function() {
        // TODO: update the code to test the property allianceId
        expect(instance).to.have.property('allianceId');
        // expect(instance.allianceId).to.be(expectedValueLiteral);
      });

      it('should have the property ancestryId (base name: "ancestry_id")', function() {
        // TODO: update the code to test the property ancestryId
        expect(instance).to.have.property('ancestryId');
        // expect(instance.ancestryId).to.be(expectedValueLiteral);
      });

      it('should have the property birthday (base name: "birthday")', function() {
        // TODO: update the code to test the property birthday
        expect(instance).to.have.property('birthday');
        // expect(instance.birthday).to.be(expectedValueLiteral);
      });

      it('should have the property bloodlineId (base name: "bloodline_id")', function() {
        // TODO: update the code to test the property bloodlineId
        expect(instance).to.have.property('bloodlineId');
        // expect(instance.bloodlineId).to.be(expectedValueLiteral);
      });

      it('should have the property corporationId (base name: "corporation_id")', function() {
        // TODO: update the code to test the property corporationId
        expect(instance).to.have.property('corporationId');
        // expect(instance.corporationId).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property factionId (base name: "faction_id")', function() {
        // TODO: update the code to test the property factionId
        expect(instance).to.have.property('factionId');
        // expect(instance.factionId).to.be(expectedValueLiteral);
      });

      it('should have the property gender (base name: "gender")', function() {
        // TODO: update the code to test the property gender
        expect(instance).to.have.property('gender');
        // expect(instance.gender).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property raceId (base name: "race_id")', function() {
        // TODO: update the code to test the property raceId
        expect(instance).to.have.property('raceId');
        // expect(instance.raceId).to.be(expectedValueLiteral);
      });

      it('should have the property securityStatus (base name: "security_status")', function() {
        // TODO: update the code to test the property securityStatus
        expect(instance).to.have.property('securityStatus');
        // expect(instance.securityStatus).to.be(expectedValueLiteral);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

    });
  });

}));
