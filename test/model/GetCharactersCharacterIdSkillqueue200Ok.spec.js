/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdSkillqueue200Ok', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCharactersCharacterIdSkillqueue200Ok();
      });

      it('should create an instance of GetCharactersCharacterIdSkillqueue200Ok', function() {
        // TODO: update the code to test GetCharactersCharacterIdSkillqueue200Ok
        expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdSkillqueue200Ok);
      });

      it('should have the property finishDate (base name: "finish_date")', function() {
        // TODO: update the code to test the property finishDate
        expect(instance).to.have.property('finishDate');
        // expect(instance.finishDate).to.be(expectedValueLiteral);
      });

      it('should have the property finishedLevel (base name: "finished_level")', function() {
        // TODO: update the code to test the property finishedLevel
        expect(instance).to.have.property('finishedLevel');
        // expect(instance.finishedLevel).to.be(expectedValueLiteral);
      });

      it('should have the property levelEndSp (base name: "level_end_sp")', function() {
        // TODO: update the code to test the property levelEndSp
        expect(instance).to.have.property('levelEndSp');
        // expect(instance.levelEndSp).to.be(expectedValueLiteral);
      });

      it('should have the property levelStartSp (base name: "level_start_sp")', function() {
        // TODO: update the code to test the property levelStartSp
        expect(instance).to.have.property('levelStartSp');
        // expect(instance.levelStartSp).to.be(expectedValueLiteral);
      });

      it('should have the property queuePosition (base name: "queue_position")', function() {
        // TODO: update the code to test the property queuePosition
        expect(instance).to.have.property('queuePosition');
        // expect(instance.queuePosition).to.be(expectedValueLiteral);
      });

      it('should have the property skillId (base name: "skill_id")', function() {
        // TODO: update the code to test the property skillId
        expect(instance).to.have.property('skillId');
        // expect(instance.skillId).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "start_date")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property trainingStartSp (base name: "training_start_sp")', function() {
        // TODO: update the code to test the property trainingStartSp
        expect(instance).to.have.property('trainingStartSp');
        // expect(instance.trainingStartSp).to.be(expectedValueLiteral);
      });

    });
  });

}));
