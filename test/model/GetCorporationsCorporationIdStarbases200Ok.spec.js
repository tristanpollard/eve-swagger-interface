/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCorporationsCorporationIdStarbases200Ok', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCorporationsCorporationIdStarbases200Ok();
      });

      it('should create an instance of GetCorporationsCorporationIdStarbases200Ok', function() {
        // TODO: update the code to test GetCorporationsCorporationIdStarbases200Ok
        expect(instance).to.be.a(EveSwaggerInterface.GetCorporationsCorporationIdStarbases200Ok);
      });

      it('should have the property moonId (base name: "moon_id")', function() {
        // TODO: update the code to test the property moonId
        expect(instance).to.have.property('moonId');
        // expect(instance.moonId).to.be(expectedValueLiteral);
      });

      it('should have the property onlinedSince (base name: "onlined_since")', function() {
        // TODO: update the code to test the property onlinedSince
        expect(instance).to.have.property('onlinedSince');
        // expect(instance.onlinedSince).to.be(expectedValueLiteral);
      });

      it('should have the property reinforcedUntil (base name: "reinforced_until")', function() {
        // TODO: update the code to test the property reinforcedUntil
        expect(instance).to.have.property('reinforcedUntil');
        // expect(instance.reinforcedUntil).to.be(expectedValueLiteral);
      });

      it('should have the property starbaseId (base name: "starbase_id")', function() {
        // TODO: update the code to test the property starbaseId
        expect(instance).to.have.property('starbaseId');
        // expect(instance.starbaseId).to.be(expectedValueLiteral);
      });

      it('should have the property state (base name: "state")', function() {
        // TODO: update the code to test the property state
        expect(instance).to.have.property('state');
        // expect(instance.state).to.be(expectedValueLiteral);
      });

      it('should have the property systemId (base name: "system_id")', function() {
        // TODO: update the code to test the property systemId
        expect(instance).to.have.property('systemId');
        // expect(instance.systemId).to.be(expectedValueLiteral);
      });

      it('should have the property typeId (base name: "type_id")', function() {
        // TODO: update the code to test the property typeId
        expect(instance).to.have.property('typeId');
        // expect(instance.typeId).to.be(expectedValueLiteral);
      });

      it('should have the property unanchorAt (base name: "unanchor_at")', function() {
        // TODO: update the code to test the property unanchorAt
        expect(instance).to.have.property('unanchorAt');
        // expect(instance.unanchorAt).to.be(expectedValueLiteral);
      });

    });
  });

}));
