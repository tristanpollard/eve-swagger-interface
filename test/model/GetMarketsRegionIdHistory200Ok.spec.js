/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetMarketsRegionIdHistory200Ok', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetMarketsRegionIdHistory200Ok();
      });

      it('should create an instance of GetMarketsRegionIdHistory200Ok', function() {
        // TODO: update the code to test GetMarketsRegionIdHistory200Ok
        expect(instance).to.be.a(EveSwaggerInterface.GetMarketsRegionIdHistory200Ok);
      });

      it('should have the property average (base name: "average")', function() {
        // TODO: update the code to test the property average
        expect(instance).to.have.property('average');
        // expect(instance.average).to.be(expectedValueLiteral);
      });

      it('should have the property _date (base name: "date")', function() {
        // TODO: update the code to test the property _date
        expect(instance).to.have.property('_date');
        // expect(instance._date).to.be(expectedValueLiteral);
      });

      it('should have the property highest (base name: "highest")', function() {
        // TODO: update the code to test the property highest
        expect(instance).to.have.property('highest');
        // expect(instance.highest).to.be(expectedValueLiteral);
      });

      it('should have the property lowest (base name: "lowest")', function() {
        // TODO: update the code to test the property lowest
        expect(instance).to.have.property('lowest');
        // expect(instance.lowest).to.be(expectedValueLiteral);
      });

      it('should have the property orderCount (base name: "order_count")', function() {
        // TODO: update the code to test the property orderCount
        expect(instance).to.have.property('orderCount');
        // expect(instance.orderCount).to.be(expectedValueLiteral);
      });

      it('should have the property volume (base name: "volume")', function() {
        // TODO: update the code to test the property volume
        expect(instance).to.have.property('volume');
        // expect(instance.volume).to.be(expectedValueLiteral);
      });

    });
  });

}));
