/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdStats200Ok', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCharactersCharacterIdStats200Ok();
      });

      it('should create an instance of GetCharactersCharacterIdStats200Ok', function() {
        // TODO: update the code to test GetCharactersCharacterIdStats200Ok
        expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdStats200Ok);
      });

      it('should have the property character (base name: "character")', function() {
        // TODO: update the code to test the property character
        expect(instance).to.have.property('character');
        // expect(instance.character).to.be(expectedValueLiteral);
      });

      it('should have the property combat (base name: "combat")', function() {
        // TODO: update the code to test the property combat
        expect(instance).to.have.property('combat');
        // expect(instance.combat).to.be(expectedValueLiteral);
      });

      it('should have the property industry (base name: "industry")', function() {
        // TODO: update the code to test the property industry
        expect(instance).to.have.property('industry');
        // expect(instance.industry).to.be(expectedValueLiteral);
      });

      it('should have the property inventory (base name: "inventory")', function() {
        // TODO: update the code to test the property inventory
        expect(instance).to.have.property('inventory');
        // expect(instance.inventory).to.be(expectedValueLiteral);
      });

      it('should have the property isk (base name: "isk")', function() {
        // TODO: update the code to test the property isk
        expect(instance).to.have.property('isk');
        // expect(instance.isk).to.be(expectedValueLiteral);
      });

      it('should have the property market (base name: "market")', function() {
        // TODO: update the code to test the property market
        expect(instance).to.have.property('market');
        // expect(instance.market).to.be(expectedValueLiteral);
      });

      it('should have the property mining (base name: "mining")', function() {
        // TODO: update the code to test the property mining
        expect(instance).to.have.property('mining');
        // expect(instance.mining).to.be(expectedValueLiteral);
      });

      it('should have the property module (base name: "module")', function() {
        // TODO: update the code to test the property module
        expect(instance).to.have.property('module');
        // expect(instance.module).to.be(expectedValueLiteral);
      });

      it('should have the property orbital (base name: "orbital")', function() {
        // TODO: update the code to test the property orbital
        expect(instance).to.have.property('orbital');
        // expect(instance.orbital).to.be(expectedValueLiteral);
      });

      it('should have the property pve (base name: "pve")', function() {
        // TODO: update the code to test the property pve
        expect(instance).to.have.property('pve');
        // expect(instance.pve).to.be(expectedValueLiteral);
      });

      it('should have the property social (base name: "social")', function() {
        // TODO: update the code to test the property social
        expect(instance).to.have.property('social');
        // expect(instance.social).to.be(expectedValueLiteral);
      });

      it('should have the property travel (base name: "travel")', function() {
        // TODO: update the code to test the property travel
        expect(instance).to.have.property('travel');
        // expect(instance.travel).to.be(expectedValueLiteral);
      });

      it('should have the property year (base name: "year")', function() {
        // TODO: update the code to test the property year
        expect(instance).to.have.property('year');
        // expect(instance.year).to.be(expectedValueLiteral);
      });

    });
  });

}));
