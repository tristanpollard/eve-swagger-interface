/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetWarsWarIdOk', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetWarsWarIdOk();
      });

      it('should create an instance of GetWarsWarIdOk', function() {
        // TODO: update the code to test GetWarsWarIdOk
        expect(instance).to.be.a(EveSwaggerInterface.GetWarsWarIdOk);
      });

      it('should have the property aggressor (base name: "aggressor")', function() {
        // TODO: update the code to test the property aggressor
        expect(instance).to.have.property('aggressor');
        // expect(instance.aggressor).to.be(expectedValueLiteral);
      });

      it('should have the property allies (base name: "allies")', function() {
        // TODO: update the code to test the property allies
        expect(instance).to.have.property('allies');
        // expect(instance.allies).to.be(expectedValueLiteral);
      });

      it('should have the property declared (base name: "declared")', function() {
        // TODO: update the code to test the property declared
        expect(instance).to.have.property('declared');
        // expect(instance.declared).to.be(expectedValueLiteral);
      });

      it('should have the property defender (base name: "defender")', function() {
        // TODO: update the code to test the property defender
        expect(instance).to.have.property('defender');
        // expect(instance.defender).to.be(expectedValueLiteral);
      });

      it('should have the property finished (base name: "finished")', function() {
        // TODO: update the code to test the property finished
        expect(instance).to.have.property('finished');
        // expect(instance.finished).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property mutual (base name: "mutual")', function() {
        // TODO: update the code to test the property mutual
        expect(instance).to.have.property('mutual');
        // expect(instance.mutual).to.be(expectedValueLiteral);
      });

      it('should have the property openForAllies (base name: "open_for_allies")', function() {
        // TODO: update the code to test the property openForAllies
        expect(instance).to.have.property('openForAllies');
        // expect(instance.openForAllies).to.be(expectedValueLiteral);
      });

      it('should have the property retracted (base name: "retracted")', function() {
        // TODO: update the code to test the property retracted
        expect(instance).to.have.property('retracted');
        // expect(instance.retracted).to.be(expectedValueLiteral);
      });

      it('should have the property started (base name: "started")', function() {
        // TODO: update the code to test the property started
        expect(instance).to.have.property('started');
        // expect(instance.started).to.be(expectedValueLiteral);
      });

    });
  });

}));
