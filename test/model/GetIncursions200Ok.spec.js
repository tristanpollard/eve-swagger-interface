/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetIncursions200Ok', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetIncursions200Ok();
      });

      it('should create an instance of GetIncursions200Ok', function() {
        // TODO: update the code to test GetIncursions200Ok
        expect(instance).to.be.a(EveSwaggerInterface.GetIncursions200Ok);
      });

      it('should have the property constellationId (base name: "constellation_id")', function() {
        // TODO: update the code to test the property constellationId
        expect(instance).to.have.property('constellationId');
        // expect(instance.constellationId).to.be(expectedValueLiteral);
      });

      it('should have the property factionId (base name: "faction_id")', function() {
        // TODO: update the code to test the property factionId
        expect(instance).to.have.property('factionId');
        // expect(instance.factionId).to.be(expectedValueLiteral);
      });

      it('should have the property hasBoss (base name: "has_boss")', function() {
        // TODO: update the code to test the property hasBoss
        expect(instance).to.have.property('hasBoss');
        // expect(instance.hasBoss).to.be(expectedValueLiteral);
      });

      it('should have the property infestedSolarSystems (base name: "infested_solar_systems")', function() {
        // TODO: update the code to test the property infestedSolarSystems
        expect(instance).to.have.property('infestedSolarSystems');
        // expect(instance.infestedSolarSystems).to.be(expectedValueLiteral);
      });

      it('should have the property influence (base name: "influence")', function() {
        // TODO: update the code to test the property influence
        expect(instance).to.have.property('influence');
        // expect(instance.influence).to.be(expectedValueLiteral);
      });

      it('should have the property stagingSolarSystemId (base name: "staging_solar_system_id")', function() {
        // TODO: update the code to test the property stagingSolarSystemId
        expect(instance).to.have.property('stagingSolarSystemId');
        // expect(instance.stagingSolarSystemId).to.be(expectedValueLiteral);
      });

      it('should have the property state (base name: "state")', function() {
        // TODO: update the code to test the property state
        expect(instance).to.have.property('state');
        // expect(instance.state).to.be(expectedValueLiteral);
      });

      it('should have the property type (base name: "type")', function() {
        // TODO: update the code to test the property type
        expect(instance).to.have.property('type');
        // expect(instance.type).to.be(expectedValueLiteral);
      });

    });
  });

}));
