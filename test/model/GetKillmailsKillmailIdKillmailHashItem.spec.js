/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetKillmailsKillmailIdKillmailHashItem', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetKillmailsKillmailIdKillmailHashItem();
      });

      it('should create an instance of GetKillmailsKillmailIdKillmailHashItem', function() {
        // TODO: update the code to test GetKillmailsKillmailIdKillmailHashItem
        expect(instance).to.be.a(EveSwaggerInterface.GetKillmailsKillmailIdKillmailHashItem);
      });

      it('should have the property flag (base name: "flag")', function() {
        // TODO: update the code to test the property flag
        expect(instance).to.have.property('flag');
        // expect(instance.flag).to.be(expectedValueLiteral);
      });

      it('should have the property itemTypeId (base name: "item_type_id")', function() {
        // TODO: update the code to test the property itemTypeId
        expect(instance).to.have.property('itemTypeId');
        // expect(instance.itemTypeId).to.be(expectedValueLiteral);
      });

      it('should have the property items (base name: "items")', function() {
        // TODO: update the code to test the property items
        expect(instance).to.have.property('items');
        // expect(instance.items).to.be(expectedValueLiteral);
      });

      it('should have the property quantityDestroyed (base name: "quantity_destroyed")', function() {
        // TODO: update the code to test the property quantityDestroyed
        expect(instance).to.have.property('quantityDestroyed');
        // expect(instance.quantityDestroyed).to.be(expectedValueLiteral);
      });

      it('should have the property quantityDropped (base name: "quantity_dropped")', function() {
        // TODO: update the code to test the property quantityDropped
        expect(instance).to.have.property('quantityDropped');
        // expect(instance.quantityDropped).to.be(expectedValueLiteral);
      });

      it('should have the property singleton (base name: "singleton")', function() {
        // TODO: update the code to test the property singleton
        expect(instance).to.have.property('singleton');
        // expect(instance.singleton).to.be(expectedValueLiteral);
      });

    });
  });

}));
