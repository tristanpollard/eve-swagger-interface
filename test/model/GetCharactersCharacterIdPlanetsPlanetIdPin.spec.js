/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdPlanetsPlanetIdPin', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCharactersCharacterIdPlanetsPlanetIdPin();
      });

      it('should create an instance of GetCharactersCharacterIdPlanetsPlanetIdPin', function() {
        // TODO: update the code to test GetCharactersCharacterIdPlanetsPlanetIdPin
        expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdPlanetsPlanetIdPin);
      });

      it('should have the property contents (base name: "contents")', function() {
        // TODO: update the code to test the property contents
        expect(instance).to.have.property('contents');
        // expect(instance.contents).to.be(expectedValueLiteral);
      });

      it('should have the property expiryTime (base name: "expiry_time")', function() {
        // TODO: update the code to test the property expiryTime
        expect(instance).to.have.property('expiryTime');
        // expect(instance.expiryTime).to.be(expectedValueLiteral);
      });

      it('should have the property extractorDetails (base name: "extractor_details")', function() {
        // TODO: update the code to test the property extractorDetails
        expect(instance).to.have.property('extractorDetails');
        // expect(instance.extractorDetails).to.be(expectedValueLiteral);
      });

      it('should have the property factoryDetails (base name: "factory_details")', function() {
        // TODO: update the code to test the property factoryDetails
        expect(instance).to.have.property('factoryDetails');
        // expect(instance.factoryDetails).to.be(expectedValueLiteral);
      });

      it('should have the property installTime (base name: "install_time")', function() {
        // TODO: update the code to test the property installTime
        expect(instance).to.have.property('installTime');
        // expect(instance.installTime).to.be(expectedValueLiteral);
      });

      it('should have the property lastCycleStart (base name: "last_cycle_start")', function() {
        // TODO: update the code to test the property lastCycleStart
        expect(instance).to.have.property('lastCycleStart');
        // expect(instance.lastCycleStart).to.be(expectedValueLiteral);
      });

      it('should have the property latitude (base name: "latitude")', function() {
        // TODO: update the code to test the property latitude
        expect(instance).to.have.property('latitude');
        // expect(instance.latitude).to.be(expectedValueLiteral);
      });

      it('should have the property longitude (base name: "longitude")', function() {
        // TODO: update the code to test the property longitude
        expect(instance).to.have.property('longitude');
        // expect(instance.longitude).to.be(expectedValueLiteral);
      });

      it('should have the property pinId (base name: "pin_id")', function() {
        // TODO: update the code to test the property pinId
        expect(instance).to.have.property('pinId');
        // expect(instance.pinId).to.be(expectedValueLiteral);
      });

      it('should have the property schematicId (base name: "schematic_id")', function() {
        // TODO: update the code to test the property schematicId
        expect(instance).to.have.property('schematicId');
        // expect(instance.schematicId).to.be(expectedValueLiteral);
      });

      it('should have the property typeId (base name: "type_id")', function() {
        // TODO: update the code to test the property typeId
        expect(instance).to.have.property('typeId');
        // expect(instance.typeId).to.be(expectedValueLiteral);
      });

    });
  });

}));
