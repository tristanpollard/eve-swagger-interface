/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetUniverseGraphicsGraphicIdOk', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetUniverseGraphicsGraphicIdOk();
      });

      it('should create an instance of GetUniverseGraphicsGraphicIdOk', function() {
        // TODO: update the code to test GetUniverseGraphicsGraphicIdOk
        expect(instance).to.be.a(EveSwaggerInterface.GetUniverseGraphicsGraphicIdOk);
      });

      it('should have the property collisionFile (base name: "collision_file")', function() {
        // TODO: update the code to test the property collisionFile
        expect(instance).to.have.property('collisionFile');
        // expect(instance.collisionFile).to.be(expectedValueLiteral);
      });

      it('should have the property graphicFile (base name: "graphic_file")', function() {
        // TODO: update the code to test the property graphicFile
        expect(instance).to.have.property('graphicFile');
        // expect(instance.graphicFile).to.be(expectedValueLiteral);
      });

      it('should have the property graphicId (base name: "graphic_id")', function() {
        // TODO: update the code to test the property graphicId
        expect(instance).to.have.property('graphicId');
        // expect(instance.graphicId).to.be(expectedValueLiteral);
      });

      it('should have the property iconFolder (base name: "icon_folder")', function() {
        // TODO: update the code to test the property iconFolder
        expect(instance).to.have.property('iconFolder');
        // expect(instance.iconFolder).to.be(expectedValueLiteral);
      });

      it('should have the property sofDna (base name: "sof_dna")', function() {
        // TODO: update the code to test the property sofDna
        expect(instance).to.have.property('sofDna');
        // expect(instance.sofDna).to.be(expectedValueLiteral);
      });

      it('should have the property sofFationName (base name: "sof_fation_name")', function() {
        // TODO: update the code to test the property sofFationName
        expect(instance).to.have.property('sofFationName');
        // expect(instance.sofFationName).to.be(expectedValueLiteral);
      });

      it('should have the property sofHullName (base name: "sof_hull_name")', function() {
        // TODO: update the code to test the property sofHullName
        expect(instance).to.have.property('sofHullName');
        // expect(instance.sofHullName).to.be(expectedValueLiteral);
      });

      it('should have the property sofRaceName (base name: "sof_race_name")', function() {
        // TODO: update the code to test the property sofRaceName
        expect(instance).to.have.property('sofRaceName');
        // expect(instance.sofRaceName).to.be(expectedValueLiteral);
      });

    });
  });

}));
