/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdStatsMining', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsMining();
      });

      it('should create an instance of GetCharactersCharacterIdStatsMining', function() {
        // TODO: update the code to test GetCharactersCharacterIdStatsMining
        expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdStatsMining);
      });

      it('should have the property droneMine (base name: "drone_mine")', function() {
        // TODO: update the code to test the property droneMine
        expect(instance).to.have.property('droneMine');
        // expect(instance.droneMine).to.be(expectedValueLiteral);
      });

      it('should have the property oreArkonor (base name: "ore_arkonor")', function() {
        // TODO: update the code to test the property oreArkonor
        expect(instance).to.have.property('oreArkonor');
        // expect(instance.oreArkonor).to.be(expectedValueLiteral);
      });

      it('should have the property oreBistot (base name: "ore_bistot")', function() {
        // TODO: update the code to test the property oreBistot
        expect(instance).to.have.property('oreBistot');
        // expect(instance.oreBistot).to.be(expectedValueLiteral);
      });

      it('should have the property oreCrokite (base name: "ore_crokite")', function() {
        // TODO: update the code to test the property oreCrokite
        expect(instance).to.have.property('oreCrokite');
        // expect(instance.oreCrokite).to.be(expectedValueLiteral);
      });

      it('should have the property oreDarkOchre (base name: "ore_dark_ochre")', function() {
        // TODO: update the code to test the property oreDarkOchre
        expect(instance).to.have.property('oreDarkOchre');
        // expect(instance.oreDarkOchre).to.be(expectedValueLiteral);
      });

      it('should have the property oreGneiss (base name: "ore_gneiss")', function() {
        // TODO: update the code to test the property oreGneiss
        expect(instance).to.have.property('oreGneiss');
        // expect(instance.oreGneiss).to.be(expectedValueLiteral);
      });

      it('should have the property oreHarvestableCloud (base name: "ore_harvestable_cloud")', function() {
        // TODO: update the code to test the property oreHarvestableCloud
        expect(instance).to.have.property('oreHarvestableCloud');
        // expect(instance.oreHarvestableCloud).to.be(expectedValueLiteral);
      });

      it('should have the property oreHedbergite (base name: "ore_hedbergite")', function() {
        // TODO: update the code to test the property oreHedbergite
        expect(instance).to.have.property('oreHedbergite');
        // expect(instance.oreHedbergite).to.be(expectedValueLiteral);
      });

      it('should have the property oreHemorphite (base name: "ore_hemorphite")', function() {
        // TODO: update the code to test the property oreHemorphite
        expect(instance).to.have.property('oreHemorphite');
        // expect(instance.oreHemorphite).to.be(expectedValueLiteral);
      });

      it('should have the property oreIce (base name: "ore_ice")', function() {
        // TODO: update the code to test the property oreIce
        expect(instance).to.have.property('oreIce');
        // expect(instance.oreIce).to.be(expectedValueLiteral);
      });

      it('should have the property oreJaspet (base name: "ore_jaspet")', function() {
        // TODO: update the code to test the property oreJaspet
        expect(instance).to.have.property('oreJaspet');
        // expect(instance.oreJaspet).to.be(expectedValueLiteral);
      });

      it('should have the property oreKernite (base name: "ore_kernite")', function() {
        // TODO: update the code to test the property oreKernite
        expect(instance).to.have.property('oreKernite');
        // expect(instance.oreKernite).to.be(expectedValueLiteral);
      });

      it('should have the property oreMercoxit (base name: "ore_mercoxit")', function() {
        // TODO: update the code to test the property oreMercoxit
        expect(instance).to.have.property('oreMercoxit');
        // expect(instance.oreMercoxit).to.be(expectedValueLiteral);
      });

      it('should have the property oreOmber (base name: "ore_omber")', function() {
        // TODO: update the code to test the property oreOmber
        expect(instance).to.have.property('oreOmber');
        // expect(instance.oreOmber).to.be(expectedValueLiteral);
      });

      it('should have the property orePlagioclase (base name: "ore_plagioclase")', function() {
        // TODO: update the code to test the property orePlagioclase
        expect(instance).to.have.property('orePlagioclase');
        // expect(instance.orePlagioclase).to.be(expectedValueLiteral);
      });

      it('should have the property orePyroxeres (base name: "ore_pyroxeres")', function() {
        // TODO: update the code to test the property orePyroxeres
        expect(instance).to.have.property('orePyroxeres');
        // expect(instance.orePyroxeres).to.be(expectedValueLiteral);
      });

      it('should have the property oreScordite (base name: "ore_scordite")', function() {
        // TODO: update the code to test the property oreScordite
        expect(instance).to.have.property('oreScordite');
        // expect(instance.oreScordite).to.be(expectedValueLiteral);
      });

      it('should have the property oreSpodumain (base name: "ore_spodumain")', function() {
        // TODO: update the code to test the property oreSpodumain
        expect(instance).to.have.property('oreSpodumain');
        // expect(instance.oreSpodumain).to.be(expectedValueLiteral);
      });

      it('should have the property oreVeldspar (base name: "ore_veldspar")', function() {
        // TODO: update the code to test the property oreVeldspar
        expect(instance).to.have.property('oreVeldspar');
        // expect(instance.oreVeldspar).to.be(expectedValueLiteral);
      });

    });
  });

}));
