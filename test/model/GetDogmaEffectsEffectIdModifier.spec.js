/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetDogmaEffectsEffectIdModifier', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetDogmaEffectsEffectIdModifier();
      });

      it('should create an instance of GetDogmaEffectsEffectIdModifier', function() {
        // TODO: update the code to test GetDogmaEffectsEffectIdModifier
        expect(instance).to.be.a(EveSwaggerInterface.GetDogmaEffectsEffectIdModifier);
      });

      it('should have the property domain (base name: "domain")', function() {
        // TODO: update the code to test the property domain
        expect(instance).to.have.property('domain');
        // expect(instance.domain).to.be(expectedValueLiteral);
      });

      it('should have the property effectId (base name: "effect_id")', function() {
        // TODO: update the code to test the property effectId
        expect(instance).to.have.property('effectId');
        // expect(instance.effectId).to.be(expectedValueLiteral);
      });

      it('should have the property func (base name: "func")', function() {
        // TODO: update the code to test the property func
        expect(instance).to.have.property('func');
        // expect(instance.func).to.be(expectedValueLiteral);
      });

      it('should have the property modifiedAttributeId (base name: "modified_attribute_id")', function() {
        // TODO: update the code to test the property modifiedAttributeId
        expect(instance).to.have.property('modifiedAttributeId');
        // expect(instance.modifiedAttributeId).to.be(expectedValueLiteral);
      });

      it('should have the property modifyingAttributeId (base name: "modifying_attribute_id")', function() {
        // TODO: update the code to test the property modifyingAttributeId
        expect(instance).to.have.property('modifyingAttributeId');
        // expect(instance.modifyingAttributeId).to.be(expectedValueLiteral);
      });

      it('should have the property operator (base name: "operator")', function() {
        // TODO: update the code to test the property operator
        expect(instance).to.have.property('operator');
        // expect(instance.operator).to.be(expectedValueLiteral);
      });

    });
  });

}));
