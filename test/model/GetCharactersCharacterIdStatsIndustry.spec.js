/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.3.8
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EveSwaggerInterface);
  }
}(this, function(expect, EveSwaggerInterface) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetCharactersCharacterIdStatsIndustry', function() {
      beforeEach(function() {
        instance = new EveSwaggerInterface.GetCharactersCharacterIdStatsIndustry();
      });

      it('should create an instance of GetCharactersCharacterIdStatsIndustry', function() {
        // TODO: update the code to test GetCharactersCharacterIdStatsIndustry
        expect(instance).to.be.a(EveSwaggerInterface.GetCharactersCharacterIdStatsIndustry);
      });

      it('should have the property hackingSuccesses (base name: "hacking_successes")', function() {
        // TODO: update the code to test the property hackingSuccesses
        expect(instance).to.have.property('hackingSuccesses');
        // expect(instance.hackingSuccesses).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCancelled (base name: "jobs_cancelled")', function() {
        // TODO: update the code to test the property jobsCancelled
        expect(instance).to.have.property('jobsCancelled');
        // expect(instance.jobsCancelled).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedCopyBlueprint (base name: "jobs_completed_copy_blueprint")', function() {
        // TODO: update the code to test the property jobsCompletedCopyBlueprint
        expect(instance).to.have.property('jobsCompletedCopyBlueprint');
        // expect(instance.jobsCompletedCopyBlueprint).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedInvention (base name: "jobs_completed_invention")', function() {
        // TODO: update the code to test the property jobsCompletedInvention
        expect(instance).to.have.property('jobsCompletedInvention');
        // expect(instance.jobsCompletedInvention).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufacture (base name: "jobs_completed_manufacture")', function() {
        // TODO: update the code to test the property jobsCompletedManufacture
        expect(instance).to.have.property('jobsCompletedManufacture');
        // expect(instance.jobsCompletedManufacture).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureAsteroid (base name: "jobs_completed_manufacture_asteroid")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureAsteroid
        expect(instance).to.have.property('jobsCompletedManufactureAsteroid');
        // expect(instance.jobsCompletedManufactureAsteroid).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureAsteroidQuantity (base name: "jobs_completed_manufacture_asteroid_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureAsteroidQuantity
        expect(instance).to.have.property('jobsCompletedManufactureAsteroidQuantity');
        // expect(instance.jobsCompletedManufactureAsteroidQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureCharge (base name: "jobs_completed_manufacture_charge")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureCharge
        expect(instance).to.have.property('jobsCompletedManufactureCharge');
        // expect(instance.jobsCompletedManufactureCharge).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureChargeQuantity (base name: "jobs_completed_manufacture_charge_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureChargeQuantity
        expect(instance).to.have.property('jobsCompletedManufactureChargeQuantity');
        // expect(instance.jobsCompletedManufactureChargeQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureCommodity (base name: "jobs_completed_manufacture_commodity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureCommodity
        expect(instance).to.have.property('jobsCompletedManufactureCommodity');
        // expect(instance.jobsCompletedManufactureCommodity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureCommodityQuantity (base name: "jobs_completed_manufacture_commodity_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureCommodityQuantity
        expect(instance).to.have.property('jobsCompletedManufactureCommodityQuantity');
        // expect(instance.jobsCompletedManufactureCommodityQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureDeployable (base name: "jobs_completed_manufacture_deployable")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureDeployable
        expect(instance).to.have.property('jobsCompletedManufactureDeployable');
        // expect(instance.jobsCompletedManufactureDeployable).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureDeployableQuantity (base name: "jobs_completed_manufacture_deployable_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureDeployableQuantity
        expect(instance).to.have.property('jobsCompletedManufactureDeployableQuantity');
        // expect(instance.jobsCompletedManufactureDeployableQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureDrone (base name: "jobs_completed_manufacture_drone")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureDrone
        expect(instance).to.have.property('jobsCompletedManufactureDrone');
        // expect(instance.jobsCompletedManufactureDrone).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureDroneQuantity (base name: "jobs_completed_manufacture_drone_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureDroneQuantity
        expect(instance).to.have.property('jobsCompletedManufactureDroneQuantity');
        // expect(instance.jobsCompletedManufactureDroneQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureImplant (base name: "jobs_completed_manufacture_implant")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureImplant
        expect(instance).to.have.property('jobsCompletedManufactureImplant');
        // expect(instance.jobsCompletedManufactureImplant).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureImplantQuantity (base name: "jobs_completed_manufacture_implant_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureImplantQuantity
        expect(instance).to.have.property('jobsCompletedManufactureImplantQuantity');
        // expect(instance.jobsCompletedManufactureImplantQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureModule (base name: "jobs_completed_manufacture_module")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureModule
        expect(instance).to.have.property('jobsCompletedManufactureModule');
        // expect(instance.jobsCompletedManufactureModule).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureModuleQuantity (base name: "jobs_completed_manufacture_module_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureModuleQuantity
        expect(instance).to.have.property('jobsCompletedManufactureModuleQuantity');
        // expect(instance.jobsCompletedManufactureModuleQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureOther (base name: "jobs_completed_manufacture_other")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureOther
        expect(instance).to.have.property('jobsCompletedManufactureOther');
        // expect(instance.jobsCompletedManufactureOther).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureOtherQuantity (base name: "jobs_completed_manufacture_other_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureOtherQuantity
        expect(instance).to.have.property('jobsCompletedManufactureOtherQuantity');
        // expect(instance.jobsCompletedManufactureOtherQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureShip (base name: "jobs_completed_manufacture_ship")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureShip
        expect(instance).to.have.property('jobsCompletedManufactureShip');
        // expect(instance.jobsCompletedManufactureShip).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureShipQuantity (base name: "jobs_completed_manufacture_ship_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureShipQuantity
        expect(instance).to.have.property('jobsCompletedManufactureShipQuantity');
        // expect(instance.jobsCompletedManufactureShipQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureStructure (base name: "jobs_completed_manufacture_structure")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureStructure
        expect(instance).to.have.property('jobsCompletedManufactureStructure');
        // expect(instance.jobsCompletedManufactureStructure).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureStructureQuantity (base name: "jobs_completed_manufacture_structure_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureStructureQuantity
        expect(instance).to.have.property('jobsCompletedManufactureStructureQuantity');
        // expect(instance.jobsCompletedManufactureStructureQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureSubsystem (base name: "jobs_completed_manufacture_subsystem")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureSubsystem
        expect(instance).to.have.property('jobsCompletedManufactureSubsystem');
        // expect(instance.jobsCompletedManufactureSubsystem).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedManufactureSubsystemQuantity (base name: "jobs_completed_manufacture_subsystem_quantity")', function() {
        // TODO: update the code to test the property jobsCompletedManufactureSubsystemQuantity
        expect(instance).to.have.property('jobsCompletedManufactureSubsystemQuantity');
        // expect(instance.jobsCompletedManufactureSubsystemQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedMaterialProductivity (base name: "jobs_completed_material_productivity")', function() {
        // TODO: update the code to test the property jobsCompletedMaterialProductivity
        expect(instance).to.have.property('jobsCompletedMaterialProductivity');
        // expect(instance.jobsCompletedMaterialProductivity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsCompletedTimeProductivity (base name: "jobs_completed_time_productivity")', function() {
        // TODO: update the code to test the property jobsCompletedTimeProductivity
        expect(instance).to.have.property('jobsCompletedTimeProductivity');
        // expect(instance.jobsCompletedTimeProductivity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsStartedCopyBlueprint (base name: "jobs_started_copy_blueprint")', function() {
        // TODO: update the code to test the property jobsStartedCopyBlueprint
        expect(instance).to.have.property('jobsStartedCopyBlueprint');
        // expect(instance.jobsStartedCopyBlueprint).to.be(expectedValueLiteral);
      });

      it('should have the property jobsStartedInvention (base name: "jobs_started_invention")', function() {
        // TODO: update the code to test the property jobsStartedInvention
        expect(instance).to.have.property('jobsStartedInvention');
        // expect(instance.jobsStartedInvention).to.be(expectedValueLiteral);
      });

      it('should have the property jobsStartedManufacture (base name: "jobs_started_manufacture")', function() {
        // TODO: update the code to test the property jobsStartedManufacture
        expect(instance).to.have.property('jobsStartedManufacture');
        // expect(instance.jobsStartedManufacture).to.be(expectedValueLiteral);
      });

      it('should have the property jobsStartedMaterialProductivity (base name: "jobs_started_material_productivity")', function() {
        // TODO: update the code to test the property jobsStartedMaterialProductivity
        expect(instance).to.have.property('jobsStartedMaterialProductivity');
        // expect(instance.jobsStartedMaterialProductivity).to.be(expectedValueLiteral);
      });

      it('should have the property jobsStartedTimeProductivity (base name: "jobs_started_time_productivity")', function() {
        // TODO: update the code to test the property jobsStartedTimeProductivity
        expect(instance).to.have.property('jobsStartedTimeProductivity');
        // expect(instance.jobsStartedTimeProductivity).to.be(expectedValueLiteral);
      });

      it('should have the property reprocessItem (base name: "reprocess_item")', function() {
        // TODO: update the code to test the property reprocessItem
        expect(instance).to.have.property('reprocessItem');
        // expect(instance.reprocessItem).to.be(expectedValueLiteral);
      });

      it('should have the property reprocessItemQuantity (base name: "reprocess_item_quantity")', function() {
        // TODO: update the code to test the property reprocessItemQuantity
        expect(instance).to.have.property('reprocessItemQuantity');
        // expect(instance.reprocessItemQuantity).to.be(expectedValueLiteral);
      });

    });
  });

}));
